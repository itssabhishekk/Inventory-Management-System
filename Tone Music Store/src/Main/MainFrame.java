/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JFrame;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class MainFrame extends javax.swing.JFrame {

   
//  Creates new form MainFrame
    
    private CardLayout cardLayout;
    private String userDirectoryPath = "./src/Database/user.csv";
    private String storeDirectoryPath = "./src/Database/ProductList.csv";
    private String curDirectoryPath;
    private List<String[]> userDetails;
    int userSearch;
    
   
    public MainFrame() {
        initComponents();
        
        curDirectoryPath = storeDirectoryPath;
        addToTables(storeDirectoryPath);
        cardLayout = (CardLayout) MainContainer.getLayout();
        
        userDetails = new ArrayList<>();    
        addMenuBar(jPanel4);
        addMenuBar(WelcomePanel);
        
        loadUserDetails();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        MainContainer = new javax.swing.JPanel();
        SignIn = new javax.swing.JPanel();
        exitbtn = new javax.swing.JLabel();
        minimizebtn = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        SignInLabel = new javax.swing.JLabel();
        jLabelPline = new javax.swing.JLabel();
        jLabelPicon = new javax.swing.JLabel();
        jLabelSignInError = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        jLabelUicon = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        jLabelUline = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        LogInBtn = new javax.swing.JButton();
        AboutUsBtn = new javax.swing.JButton();
        RegisterHereBtn = new javax.swing.JButton();
        HelpBtn = new javax.swing.JButton();
        jLabelCopyright = new javax.swing.JLabel();
        jBackground = new javax.swing.JLabel();
        SignUp = new javax.swing.JPanel();
        exitbtn1 = new javax.swing.JLabel();
        minimizebtn1 = new javax.swing.JLabel();
        FullNameLabel = new javax.swing.JLabel();
        RegPasswordLabel = new javax.swing.JLabel();
        ReturnBtn = new javax.swing.JButton();
        RegisterFullNameTxtFld = new javax.swing.JTextField();
        SignUpLabel = new javax.swing.JLabel();
        RegPasswordField = new javax.swing.JPasswordField();
        jLabelUline1 = new javax.swing.JLabel();
        jLabelPline1 = new javax.swing.JLabel();
        RegisterBtn = new javax.swing.JButton();
        RegUsernameLabel = new javax.swing.JLabel();
        RegUsernameTxtFld = new javax.swing.JTextField();
        jLabelUline2 = new javax.swing.JLabel();
        ConPasswordLabel = new javax.swing.JLabel();
        ConPasswordField = new javax.swing.JPasswordField();
        jLabelPline2 = new javax.swing.JLabel();
        jLabelSignUpError = new javax.swing.JLabel();
        jBackground1 = new javax.swing.JLabel();
        AboutUs = new javax.swing.JPanel();
        minimizebtn2 = new javax.swing.JLabel();
        exitbtn2 = new javax.swing.JLabel();
        ReturnToLoginBtn = new javax.swing.JButton();
        jLabelAboutUs = new javax.swing.JLabel();
        jLabelCopyright1 = new javax.swing.JLabel();
        jBackground3 = new javax.swing.JLabel();
        UserPage = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        UserWelcomeLabel = new javax.swing.JLabel();
        LogOutUserBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        exitbtn3 = new javax.swing.JLabel();
        minimizebtn3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        SrchProLabel = new javax.swing.JLabel();
        UserTypeComboBox = new javax.swing.JComboBox<>();
        UserBrandComboBox = new javax.swing.JComboBox<>();
        UserMinPriceTxtFld = new javax.swing.JTextField();
        UserMaxPriceTxtFld = new javax.swing.JTextField();
        UserClearBtn = new javax.swing.JButton();
        jLabelRange = new javax.swing.JLabel();
        jLabelType = new javax.swing.JLabel();
        MaxLabel = new javax.swing.JLabel();
        jLabelBrand = new javax.swing.JLabel();
        MinLabel = new javax.swing.JLabel();
        SearchTxtFld = new javax.swing.JTextField();
        UserSearchBtn = new javax.swing.JButton();
        UserPriceRadioBtn = new javax.swing.JRadioButton();
        UserBrandRadioBtn = new javax.swing.JRadioButton();
        UserTypeRadioBtn = new javax.swing.JRadioButton();
        UserNameRadioBtn = new javax.swing.JRadioButton();
        AdminAccessBtn = new javax.swing.JButton();
        CopyrightAdminlbl1 = new javax.swing.JLabel();
        SearchResultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        AdminPage = new javax.swing.JPanel();
        WelcomePanel = new javax.swing.JPanel();
        AdminWelcomeLabel = new javax.swing.JLabel();
        AdminLogOutBtn = new javax.swing.JButton();
        LogoPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        exitbtn4 = new javax.swing.JLabel();
        minimizebtn4 = new javax.swing.JLabel();
        ConfigurePanel = new javax.swing.JPanel();
        ConfigureLabel = new javax.swing.JLabel();
        AdminProductIDTxtFld = new javax.swing.JTextField();
        AdminTypeComboBox = new javax.swing.JComboBox<>();
        AdminBrandComboBox = new javax.swing.JComboBox<>();
        AdminPriceTxtFld = new javax.swing.JTextField();
        AdminProductNameTxtFld = new javax.swing.JTextField();
        AdminDeleteBtn = new javax.swing.JButton();
        ProductPriceLabel = new javax.swing.JLabel();
        ProductIDLabel = new javax.swing.JLabel();
        ProductNameLabel = new javax.swing.JLabel();
        ProductTypeLabel = new javax.swing.JLabel();
        ProductBrandLabel = new javax.swing.JLabel();
        AdminAddBtn = new javax.swing.JButton();
        AdminCommitBtn = new javax.swing.JButton();
        AdminEditBtn = new javax.swing.JButton();
        AdminClearBtn = new javax.swing.JButton();
        jLabelAddError = new javax.swing.JLabel();
        AdminToUserBtn = new javax.swing.JButton();
        CopyrightAdminlbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAdmin = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MainContainer.setLayout(new java.awt.CardLayout());

        SignIn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/exitbutton.png"))); // NOI18N
        exitbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtnMouseClicked(evt);
            }
        });
        SignIn.add(exitbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        minimizebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/minimizebutton.png"))); // NOI18N
        minimizebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtnMouseClicked(evt);
            }
        });
        SignIn.add(minimizebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        PasswordLabel.setBackground(new java.awt.Color(0, 0, 0));
        PasswordLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        PasswordLabel.setText("Password");
        SignIn.add(PasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, -1, -1));

        SignInLabel.setBackground(new java.awt.Color(0, 0, 0));
        SignInLabel.setFont(new java.awt.Font("Montserrat Black", 1, 48)); // NOI18N
        SignInLabel.setText("SIGN IN");
        SignIn.add(SignInLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));

        jLabelPline.setBackground(new java.awt.Color(0, 0, 0));
        jLabelPline.setText("_______________________________________");
        SignIn.add(jLabelPline, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 280, 20));

        jLabelPicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/passkey.png"))); // NOI18N
        SignIn.add(jLabelPicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 30, 50));

        jLabelSignInError.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelSignInError.setForeground(new java.awt.Color(199, 51, 51));
        SignIn.add(jLabelSignInError, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        UsernameLabel.setBackground(new java.awt.Color(0, 0, 0));
        UsernameLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        UsernameLabel.setText("Username");
        SignIn.add(UsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabelUicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/usernameicon.png"))); // NOI18N
        SignIn.add(jLabelUicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 30, 70));

        UsernameTextField.setBackground(new java.awt.Color(201, 201, 201));
        UsernameTextField.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        UsernameTextField.setBorder(null);
        SignIn.add(UsernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 230, 30));

        jLabelUline.setBackground(new java.awt.Color(0, 0, 0));
        jLabelUline.setText("_______________________________________");
        SignIn.add(jLabelUline, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 280, 60));

        PasswordField.setBackground(new java.awt.Color(198, 198, 198));
        PasswordField.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        PasswordField.setBorder(null);
        PasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordFieldKeyPressed(evt);
            }
        });
        SignIn.add(PasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 230, 30));

        LogInBtn.setBackground(new java.awt.Color(0, 0, 0));
        LogInBtn.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        LogInBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogInBtn.setText("LOGIN");
        LogInBtn.setBorder(null);
        LogInBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogInBtnActionPerformed(evt);
            }
        });
        SignIn.add(LogInBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, 160, 60));

        AboutUsBtn.setBackground(new java.awt.Color(146, 148, 149));
        AboutUsBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        AboutUsBtn.setText("About Us");
        AboutUsBtn.setBorder(null);
        AboutUsBtn.setBorderPainted(false);
        AboutUsBtn.setContentAreaFilled(false);
        AboutUsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AboutUsBtn.setFocusPainted(false);
        AboutUsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AboutUsBtnMouseClicked(evt);
            }
        });
        SignIn.add(AboutUsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 590, 110, -1));

        RegisterHereBtn.setBackground(new java.awt.Color(146, 148, 149));
        RegisterHereBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        RegisterHereBtn.setText("Not registered yet? Register Here");
        RegisterHereBtn.setBorder(null);
        RegisterHereBtn.setBorderPainted(false);
        RegisterHereBtn.setContentAreaFilled(false);
        RegisterHereBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterHereBtn.setFocusPainted(false);
        RegisterHereBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterHereBtnMouseClicked(evt);
            }
        });
        SignIn.add(RegisterHereBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 560, 300, -1));

        HelpBtn.setBackground(new java.awt.Color(146, 148, 149));
        HelpBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        HelpBtn.setText("Help");
        HelpBtn.setBorder(null);
        HelpBtn.setBorderPainted(false);
        HelpBtn.setContentAreaFilled(false);
        HelpBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HelpBtn.setFocusPainted(false);
        HelpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpBtnActionPerformed(evt);
            }
        });
        SignIn.add(HelpBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 620, 110, -1));

        jLabelCopyright.setBackground(new java.awt.Color(51, 51, 51));
        jLabelCopyright.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabelCopyright.setText("© Tone Music Store 2021");
        SignIn.add(jLabelCopyright, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 660, -1, -1));

        jBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/mainframebackground.jpg"))); // NOI18N
        SignIn.add(jBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        MainContainer.add(SignIn, "SignIn");

        SignUp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/exitbutton.png"))); // NOI18N
        exitbtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtn1MouseClicked(evt);
            }
        });
        SignUp.add(exitbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        minimizebtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/minimizebutton.png"))); // NOI18N
        minimizebtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizebtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtn1MouseClicked(evt);
            }
        });
        SignUp.add(minimizebtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        FullNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        FullNameLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        FullNameLabel.setText("Full Name");
        SignUp.add(FullNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        RegPasswordLabel.setBackground(new java.awt.Color(0, 0, 0));
        RegPasswordLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RegPasswordLabel.setText("Password");
        SignUp.add(RegPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        ReturnBtn.setBackground(new java.awt.Color(146, 148, 149));
        ReturnBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ReturnBtn.setText("Already Registered? Sign in Here");
        ReturnBtn.setBorder(null);
        ReturnBtn.setBorderPainted(false);
        ReturnBtn.setContentAreaFilled(false);
        ReturnBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ReturnBtn.setFocusPainted(false);
        ReturnBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReturnBtnMouseClicked(evt);
            }
        });
        SignUp.add(ReturnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 650, 280, -1));

        RegisterFullNameTxtFld.setBackground(new java.awt.Color(194, 194, 194));
        RegisterFullNameTxtFld.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        RegisterFullNameTxtFld.setBorder(null);
        SignUp.add(RegisterFullNameTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 260, 30));

        SignUpLabel.setBackground(new java.awt.Color(0, 0, 0));
        SignUpLabel.setFont(new java.awt.Font("Montserrat Black", 1, 48)); // NOI18N
        SignUpLabel.setText("SIGN UP");
        SignUp.add(SignUpLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        RegPasswordField.setBackground(new java.awt.Color(195, 195, 195));
        RegPasswordField.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        RegPasswordField.setBorder(null);
        SignUp.add(RegPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 260, 30));

        jLabelUline1.setBackground(new java.awt.Color(0, 0, 0));
        jLabelUline1.setText("_______________________________________");
        SignUp.add(jLabelUline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 280, 60));

        jLabelPline1.setBackground(new java.awt.Color(0, 0, 0));
        jLabelPline1.setText("_______________________________________");
        SignUp.add(jLabelPline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 280, 20));

        RegisterBtn.setBackground(new java.awt.Color(0, 0, 0));
        RegisterBtn.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        RegisterBtn.setForeground(new java.awt.Color(255, 255, 255));
        RegisterBtn.setText("Register");
        RegisterBtn.setBorder(null);
        RegisterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterBtnActionPerformed(evt);
            }
        });
        SignUp.add(RegisterBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 550, 160, 60));

        RegUsernameLabel.setBackground(new java.awt.Color(0, 0, 0));
        RegUsernameLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RegUsernameLabel.setText("Username");
        SignUp.add(RegUsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        RegUsernameTxtFld.setBackground(new java.awt.Color(201, 201, 201));
        RegUsernameTxtFld.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        RegUsernameTxtFld.setBorder(null);
        SignUp.add(RegUsernameTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 260, 40));

        jLabelUline2.setBackground(new java.awt.Color(0, 0, 0));
        jLabelUline2.setText("_______________________________________");
        SignUp.add(jLabelUline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 280, 60));

        ConPasswordLabel.setBackground(new java.awt.Color(0, 0, 0));
        ConPasswordLabel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        ConPasswordLabel.setText("Confirm Password");
        SignUp.add(ConPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, -1, -1));

        ConPasswordField.setBackground(new java.awt.Color(185, 185, 185));
        ConPasswordField.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        ConPasswordField.setBorder(null);
        SignUp.add(ConPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 260, 30));

        jLabelPline2.setBackground(new java.awt.Color(0, 0, 0));
        jLabelPline2.setText("_______________________________________");
        SignUp.add(jLabelPline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 280, 20));

        jLabelSignUpError.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelSignUpError.setForeground(new java.awt.Color(199, 51, 51));
        SignUp.add(jLabelSignUpError, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 380, 20));

        jBackground1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/mainframebackground.jpg"))); // NOI18N
        SignUp.add(jBackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        MainContainer.add(SignUp, "SignUp");

        AboutUs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minimizebtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/minimizebutton.png"))); // NOI18N
        minimizebtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizebtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtn2MouseClicked(evt);
            }
        });
        AboutUs.add(minimizebtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        exitbtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/exitbutton.png"))); // NOI18N
        exitbtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtn2MouseClicked(evt);
            }
        });
        AboutUs.add(exitbtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        ReturnToLoginBtn.setBackground(new java.awt.Color(146, 148, 149));
        ReturnToLoginBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ReturnToLoginBtn.setText("Return to Login");
        ReturnToLoginBtn.setBorder(null);
        ReturnToLoginBtn.setBorderPainted(false);
        ReturnToLoginBtn.setContentAreaFilled(false);
        ReturnToLoginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ReturnToLoginBtn.setFocusPainted(false);
        ReturnToLoginBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReturnToLoginBtnMouseClicked(evt);
            }
        });
        AboutUs.add(ReturnToLoginBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 650, 150, 40));

        jLabelAboutUs.setBackground(new java.awt.Color(0, 0, 0));
        jLabelAboutUs.setFont(new java.awt.Font("Montserrat Black", 1, 48)); // NOI18N
        jLabelAboutUs.setText("ABOUT US");
        AboutUs.add(jLabelAboutUs, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        jLabelCopyright1.setBackground(new java.awt.Color(51, 51, 51));
        jLabelCopyright1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabelCopyright1.setText("© Tone Music Store 2021");
        AboutUs.add(jLabelCopyright1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 660, -1, -1));

        jBackground3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/aboutusBackground.jpg"))); // NOI18N
        AboutUs.add(jBackground3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        MainContainer.add(AboutUs, "AboutUs");

        UserPage.setBackground(new java.awt.Color(202, 202, 202));
        UserPage.setForeground(new java.awt.Color(202, 202, 202));
        UserPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(202, 202, 202));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserWelcomeLabel.setFont(new java.awt.Font("Gill Sans MT", 1, 30)); // NOI18N
        UserWelcomeLabel.setText("Welcome,");
        jPanel4.add(UserWelcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 470, 30));

        LogOutUserBtn.setBackground(new java.awt.Color(0, 0, 0));
        LogOutUserBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        LogOutUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogOutUserBtn.setText("Log Out");
        LogOutUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogOutUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutUserBtnActionPerformed(evt);
            }
        });
        jPanel4.add(LogOutUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, 100, -1));

        UserPage.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 840, 80));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/logo.png"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 150, 130));

        exitbtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/exitbutton.png"))); // NOI18N
        exitbtn3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtn3MouseClicked(evt);
            }
        });
        jPanel2.add(exitbtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        minimizebtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/minimizebutton.png"))); // NOI18N
        minimizebtn3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizebtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtn3MouseClicked(evt);
            }
        });
        jPanel2.add(minimizebtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        UserPage.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 190));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SrchProLabel.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        SrchProLabel.setText("Search Products");
        jPanel3.add(SrchProLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        UserTypeComboBox.setBackground(new java.awt.Color(202, 202, 202));
        UserTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Guitar", "Keyboard", "Drums", "Bass", "Violin", "Flute", "Accessories" }));
        UserTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserTypeComboBoxActionPerformed(evt);
            }
        });
        jPanel3.add(UserTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 210, -1));

        UserBrandComboBox.setBackground(new java.awt.Color(202, 202, 202));
        UserBrandComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Pearl", "Yamaha", "Epiphone", "Nux", "Tama", "Casio", "Mantra", "Korg", "Others" }));
        UserBrandComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserBrandComboBoxActionPerformed(evt);
            }
        });
        jPanel3.add(UserBrandComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 210, -1));

        UserMinPriceTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        UserMinPriceTxtFld.setBorder(null);
        jPanel3.add(UserMinPriceTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 60, 20));

        UserMaxPriceTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        UserMaxPriceTxtFld.setBorder(null);
        jPanel3.add(UserMaxPriceTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 70, 20));

        UserClearBtn.setBackground(new java.awt.Color(0, 0, 0));
        UserClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        UserClearBtn.setText("Clear");
        UserClearBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserClearBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, 90, 35));

        jLabelRange.setBackground(new java.awt.Color(0, 0, 0));
        jLabelRange.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelRange.setText("Price Range");
        jPanel3.add(jLabelRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jLabelType.setBackground(new java.awt.Color(0, 0, 0));
        jLabelType.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelType.setText("Type");
        jPanel3.add(jLabelType, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        MaxLabel.setBackground(new java.awt.Color(0, 0, 0));
        MaxLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MaxLabel.setText("Max.");
        jPanel3.add(MaxLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, 20));

        jLabelBrand.setBackground(new java.awt.Color(0, 0, 0));
        jLabelBrand.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelBrand.setText("Brand");
        jPanel3.add(jLabelBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        MinLabel.setBackground(new java.awt.Color(0, 0, 0));
        MinLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MinLabel.setText("Min.");
        jPanel3.add(MinLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, 20));

        SearchTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        SearchTxtFld.setBorder(null);
        jPanel3.add(SearchTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 240, 30));

        UserSearchBtn.setBackground(new java.awt.Color(0, 0, 0));
        UserSearchBtn.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        UserSearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        UserSearchBtn.setText("Search");
        UserSearchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserSearchBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 90, 35));

        UserPriceRadioBtn.setBackground(new java.awt.Color(202, 202, 202));
        buttonGroup1.add(UserPriceRadioBtn);
        UserPriceRadioBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UserPriceRadioBtn.setText("Price");
        UserPriceRadioBtn.setOpaque(false);
        UserPriceRadioBtn.setRequestFocusEnabled(false);
        UserPriceRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserPriceRadioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserPriceRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, -1, 20));

        UserBrandRadioBtn.setBackground(new java.awt.Color(202, 202, 202));
        buttonGroup1.add(UserBrandRadioBtn);
        UserBrandRadioBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UserBrandRadioBtn.setText("Brand");
        UserBrandRadioBtn.setOpaque(false);
        UserBrandRadioBtn.setRequestFocusEnabled(false);
        UserBrandRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserBrandRadioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserBrandRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, 20));

        UserTypeRadioBtn.setBackground(new java.awt.Color(202, 202, 202));
        buttonGroup1.add(UserTypeRadioBtn);
        UserTypeRadioBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UserTypeRadioBtn.setText("Type");
        UserTypeRadioBtn.setOpaque(false);
        UserTypeRadioBtn.setRequestFocusEnabled(false);
        UserTypeRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserTypeRadioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserTypeRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, 20));

        UserNameRadioBtn.setBackground(new java.awt.Color(202, 202, 202));
        buttonGroup1.add(UserNameRadioBtn);
        UserNameRadioBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        UserNameRadioBtn.setText("Name");
        UserNameRadioBtn.setOpaque(false);
        UserNameRadioBtn.setRequestFocusEnabled(false);
        UserNameRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameRadioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(UserNameRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        AdminAccessBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminAccessBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminAccessBtn.setText("Go To Admin Panel");
        AdminAccessBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AdminAccessBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminAccessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAccessBtnActionPerformed(evt);
            }
        });
        jPanel3.add(AdminAccessBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, 130, 30));

        CopyrightAdminlbl1.setBackground(new java.awt.Color(51, 51, 51));
        CopyrightAdminlbl1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CopyrightAdminlbl1.setText("© Tone Music Store 2021");
        jPanel3.add(CopyrightAdminlbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, 20));

        UserPage.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 260, 510));
        UserPage.add(SearchResultLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 370, 30));

        jTableUser.setBackground(new java.awt.Color(202, 202, 202));
        jTableUser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Type", "Brand", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUser.setMinimumSize(new java.awt.Dimension(75, 700));
        jTableUser.setRowHeight(26);
        jScrollPane1.setViewportView(jTableUser);

        UserPage.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 840, 590));

        MainContainer.add(UserPage, "UserPage");

        AdminPage.setBackground(new java.awt.Color(202, 202, 202));
        AdminPage.setForeground(new java.awt.Color(202, 202, 202));
        AdminPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WelcomePanel.setBackground(new java.awt.Color(202, 202, 202));
        WelcomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AdminWelcomeLabel.setFont(new java.awt.Font("Gill Sans MT", 1, 30)); // NOI18N
        AdminWelcomeLabel.setText("Welcome, ");
        WelcomePanel.add(AdminWelcomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 470, 30));

        AdminLogOutBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminLogOutBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        AdminLogOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminLogOutBtn.setText("Log Out");
        AdminLogOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminLogOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminLogOutBtnActionPerformed(evt);
            }
        });
        WelcomePanel.add(AdminLogOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, 100, -1));

        AdminPage.add(WelcomePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 840, 80));

        LogoPanel.setBackground(new java.awt.Color(153, 153, 153));
        LogoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/logo.png"))); // NOI18N
        LogoPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 150, 130));

        exitbtn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/exitbutton.png"))); // NOI18N
        exitbtn4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitbtn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtn4MouseClicked(evt);
            }
        });
        LogoPanel.add(exitbtn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        minimizebtn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/Images/minimizebutton.png"))); // NOI18N
        minimizebtn4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizebtn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtn4MouseClicked(evt);
            }
        });
        LogoPanel.add(minimizebtn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        AdminPage.add(LogoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 180));

        ConfigurePanel.setBackground(new java.awt.Color(153, 153, 153));
        ConfigurePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ConfigureLabel.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        ConfigureLabel.setText("Configure Table");
        ConfigurePanel.add(ConfigureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        AdminProductIDTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        AdminProductIDTxtFld.setBorder(null);
        ConfigurePanel.add(AdminProductIDTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 240, 20));

        AdminTypeComboBox.setBackground(new java.awt.Color(202, 202, 202));
        AdminTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Guitar", "Keyboard", "Drums", "Bass", "Violin", "Flute", "Accessories", " " }));
        AdminTypeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminTypeComboBoxActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminTypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 240, -1));

        AdminBrandComboBox.setBackground(new java.awt.Color(202, 202, 202));
        AdminBrandComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pearl", "Yamaha", "Epiphone", "Nux", "Tama", "Casio", "Mantra", "Korg", "Others" }));
        AdminBrandComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConfigurePanel.add(AdminBrandComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 240, -1));

        AdminPriceTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        AdminPriceTxtFld.setBorder(null);
        ConfigurePanel.add(AdminPriceTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 240, 20));

        AdminProductNameTxtFld.setBackground(new java.awt.Color(202, 202, 202));
        AdminProductNameTxtFld.setBorder(null);
        ConfigurePanel.add(AdminProductNameTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 240, 20));

        AdminDeleteBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminDeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminDeleteBtn.setText("Delete");
        AdminDeleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminDeleteBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminDeleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 80, -1));

        ProductPriceLabel.setBackground(new java.awt.Color(0, 0, 0));
        ProductPriceLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductPriceLabel.setText("Price");
        ConfigurePanel.add(ProductPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        ProductIDLabel.setBackground(new java.awt.Color(0, 0, 0));
        ProductIDLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductIDLabel.setText("Product ID");
        ConfigurePanel.add(ProductIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        ProductNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        ProductNameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductNameLabel.setText("Product Name");
        ConfigurePanel.add(ProductNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        ProductTypeLabel.setBackground(new java.awt.Color(0, 0, 0));
        ProductTypeLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductTypeLabel.setText("Type");
        ConfigurePanel.add(ProductTypeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        ProductBrandLabel.setBackground(new java.awt.Color(0, 0, 0));
        ProductBrandLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ProductBrandLabel.setText("Brand");
        ConfigurePanel.add(ProductBrandLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        AdminAddBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminAddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminAddBtn.setText("Add");
        AdminAddBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminAddBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminAddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 70, -1));

        AdminCommitBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminCommitBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminCommitBtn.setText("Save ");
        AdminCommitBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminCommitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminCommitBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminCommitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, -1, -1));

        AdminEditBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminEditBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminEditBtn.setText("Edit");
        AdminEditBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminEditBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminEditBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 70, -1));

        AdminClearBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminClearBtn.setText("Clear");
        AdminClearBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminClearBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 70, -1));

        jLabelAddError.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelAddError.setForeground(new java.awt.Color(199, 51, 51));
        ConfigurePanel.add(jLabelAddError, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 220, 20));

        AdminToUserBtn.setBackground(new java.awt.Color(0, 0, 0));
        AdminToUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        AdminToUserBtn.setText("Go to User Panel");
        AdminToUserBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminToUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminToUserBtnActionPerformed(evt);
            }
        });
        ConfigurePanel.add(AdminToUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 455, 130, 30));

        CopyrightAdminlbl.setBackground(new java.awt.Color(51, 51, 51));
        CopyrightAdminlbl.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CopyrightAdminlbl.setText("© Tone Music Store 2021");
        ConfigurePanel.add(CopyrightAdminlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, 20));

        AdminPage.add(ConfigurePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 260, 520));

        jTableAdmin.setBackground(new java.awt.Color(202, 202, 202));
        jTableAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTableAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Type", "Brand", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAdmin.setRowHeight(26);
        jScrollPane2.setViewportView(jTableAdmin);
        if (jTableAdmin.getColumnModel().getColumnCount() > 0) {
            jTableAdmin.getColumnModel().getColumn(0).setResizable(false);
            jTableAdmin.getColumnModel().getColumn(1).setResizable(false);
            jTableAdmin.getColumnModel().getColumn(2).setResizable(false);
            jTableAdmin.getColumnModel().getColumn(3).setResizable(false);
            jTableAdmin.getColumnModel().getColumn(4).setResizable(false);
        }

        AdminPage.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 840, 590));

        MainContainer.add(AdminPage, "AdminPage");

        getContentPane().add(MainContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void loadUserDetails(){
        try{
            BufferedReader br = new  BufferedReader (new FileReader(userDirectoryPath));
            String line = "";
            while ((line = br.readLine()) != null) {
                userDetails.add(line.split(","));
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
    
     
    
    private void updateUserDirectory(){
        try{
            FileWriter csvWriter = new  FileWriter(userDirectoryPath);
            
            for (String[] values : userDetails){
                csvWriter.append( String.join(",", values)+"\n");
            }
            
            csvWriter.flush();
            csvWriter.close();
            
        }catch (Exception e){
            e.printStackTrace();
        }
    }
   
    private void clearFields(String status) {
        JPanel panel;
        switch(status){
//            If used is logged in to the system, clear all fields on login panel
            case "SignIn":
                panel = SignIn;
                break;
//            If used is registered in to the system, clear all fields on login panel
            case "register":
                panel = SignUp;
                break;
            default:
                panel=SignIn;
        }
//        Get all text fields from the panel and set it empty
        for(Component component: panel.getComponents()){
            if(component instanceof JTextField){
                ((JTextField) component).setText("");
            }
        }
    }
    
     public void login(){
        String username = UsernameTextField.getText().trim();
        String password = new String(PasswordField.getPassword()).trim();
        
        boolean invalid = true;
        
        for(String[] values: userDetails){
            if (values[0].equals(username) && values[1].equals(password)){
               invalid = false;
               jLabelSignInError.setText("");
               JOptionPane.showConfirmDialog(this, "Login Success", "Welcome", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
               UserWelcomeLabel.setText("Welcome, "+ values[3]);
               AdminWelcomeLabel.setText("Welcome, "+ values[3]);
               CardOnLogin(); 
               
            }
            else {
                jLabelSignInError.setText("Incorrect Username/Password!"); //Show error if login credentials are incorrect
            }
        }
        
    }
     
    private void CardOnLogin() {
//      If the logged in user is admin
        String username = UsernameTextField.getText().trim();
        if(username.equals("admin")){      
            cardLayout.show(MainContainer, "AdminPage");
            AdminAccessBtn.setEnabled(true);
            AdminAccessBtn.setVisible(true);
            UserTypeComboBox.setEnabled(false);
            UserTypeComboBox.setVisible(false);
            UserBrandComboBox.setEnabled(false);
            UserBrandComboBox.setVisible(false);
            jLabelType.setVisible(false);
            jLabelBrand.setVisible(false);
            jLabelRange.setVisible(false);
            MaxLabel.setVisible(false);
            MinLabel.setVisible(false);
            UserMinPriceTxtFld.setEnabled(false);
            UserMinPriceTxtFld.setVisible(false);
            UserMaxPriceTxtFld.setEnabled(false);
            UserMaxPriceTxtFld.setVisible(false);
        }
//      If the logged in user is other than admin
        else{
            cardLayout.show(MainContainer, "UserPage");
            AdminAccessBtn.setEnabled(false);
            AdminAccessBtn.setVisible(false);
            UserTypeComboBox.setEnabled(false);
            UserTypeComboBox.setVisible(false);
            UserBrandComboBox.setEnabled(false);
            UserBrandComboBox.setVisible(false);
            jLabelType.setVisible(false);
            jLabelBrand.setVisible(false);
            jLabelRange.setVisible(false);
            MaxLabel.setVisible(false);
            MinLabel.setVisible(false);
            UserMinPriceTxtFld.setEnabled(false);
            UserMinPriceTxtFld.setVisible(false);
            UserMaxPriceTxtFld.setEnabled(false);
            UserMaxPriceTxtFld.setVisible(false);
        }
        
    }   
    
    private void logOut() {
//      Confirms if user wants to logout
        int userAnswer = JOptionPane.showConfirmDialog(this, "Do you want to logout?", "Log Out", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
//      If user clicks on Ok
        if(userAnswer == 0){
            cardLayout.show(MainContainer, "SignIn"); //change from current card to Sign In Card
            clearFields("SignIn");
            clearFields("register");
            UsernameTextField.setText("");
            PasswordField.setText("");
            jLabelSignInError.setText("");
            jLabelSignUpError.setText("");
            AdminProductIDTxtFld.setText("");
            AdminProductNameTxtFld.setText("");
            AdminPriceTxtFld.setText("");
            UserMinPriceTxtFld.setText("");
            UserMaxPriceTxtFld.setText("");
            SearchTxtFld.setText("");
            
        }
    }
    
    
//  Gets all product ids list from the JTable  
    private LinkedList getProductIds() {
        LinkedList pIds = new LinkedList();
        for (int i = 0; i < jTableAdmin.getRowCount(); i++) {
            if(jTableAdmin.getValueAt(i, 0)!= null){
                pIds.add(jTableAdmin.getValueAt(i, 0).toString());
            }
        }
        return pIds;
    }
    

//  Gets all product names list from the JTable
    private LinkedList getNames() {
    LinkedList names = new LinkedList();
        for (int i = 0; i < jTableAdmin.getRowCount(); i++) {
            if(jTableAdmin.getValueAt(i, 1)!= null){
                names.add(jTableAdmin.getValueAt(i, 1).toString());
            }
        }
    return names;
    }
    
    
//  Gets all type list from the JTable
    private LinkedList getTypes() {
    LinkedList types = new LinkedList();
        for (int i = 0; i < jTableAdmin.getRowCount(); i++) {
            if(jTableAdmin.getValueAt(i, 2)!= null){
                types.add(jTableAdmin.getValueAt(i, 2).toString());
            }
        }
    return types;
    }
    
   
//  Gets all brands list from the JTable
    private LinkedList getBrands() {
    LinkedList brds = new LinkedList();
        for (int i = 0; i < jTableAdmin.getRowCount(); i++) {
            if(jTableAdmin.getValueAt(i, 3)!= null){
                brds.add(jTableAdmin.getValueAt(i, 3).toString());
            }
        }
    return brds;
    }
    
    
//  Gets all prices list from the JTable
    private LinkedList getPrices() {
        LinkedList prc = new LinkedList();
        for (int i = 0; i < jTableAdmin.getRowCount(); i++) {
            if(jTableAdmin.getValueAt(i, 4)!= null){
                prc.add(jTableAdmin.getValueAt(i, 4).toString());
            }
        }
        return prc;
    }
    
  
    

    private void exitbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtnMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitbtnMouseClicked

    private void minimizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtnMouseClicked

    private void RegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterBtnActionPerformed
        String name = RegisterFullNameTxtFld.getText().trim();
        String username = RegUsernameTxtFld.getText().trim();
        String password = new String(RegPasswordField.getPassword()).trim(); 
        String repassword = new String(ConPasswordField.getPassword()).trim();
        
        boolean valid = true;
        
        for(String[] values: userDetails){
            if (values[0].equals(username)) {valid = false;break;}
        }
        
        if(valid){
            if(! password.equals(repassword)){
                jLabelSignUpError.setText("Passwords do not match. Try again!");
            }
            else if(name.isEmpty() || username.isEmpty() || password.isEmpty()){
                jLabelSignUpError.setText("Please fill all the fields!");
            }
            else if(password.length()<8){
                jLabelSignUpError.setText("Password needs to contain at least 8 characters.");
            }
            else{
                JOptionPane.showConfirmDialog(this, "Account Sucessfully Registered", "Register",JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                userDetails.add(new String[]{username, password, "user", name});
                updateUserDirectory();
                cardLayout.show(MainContainer, "SignIn");
                for(Component component: SignUp.getComponents()){
                    if(component instanceof JTextField){
                        ((JTextField) component).setText("");
                    }
                }
                UsernameTextField.setText(username);
                PasswordField.setText("");
                jLabelSignInError.setText("");
                jLabelSignUpError.setText("");
            }
        }
        else{
            jLabelSignUpError.setText("Username already in use. Please try again!");
        }
        
    }//GEN-LAST:event_RegisterBtnActionPerformed

    private void RegisterHereBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterHereBtnMouseClicked
        cardLayout.show(MainContainer, "SignUp");
        RegisterFullNameTxtFld.setText("");
        RegUsernameTxtFld.setText("");
        RegPasswordField.setText("");
        ConPasswordField.setText("");
    }//GEN-LAST:event_RegisterHereBtnMouseClicked

    private void ReturnBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReturnBtnMouseClicked
        cardLayout.show(MainContainer, "SignIn");
        UsernameTextField.setText("");
        PasswordField.setText("");
        jLabelSignInError.setText("");
        jLabelSignUpError.setText("");
    }//GEN-LAST:event_ReturnBtnMouseClicked

    private void AboutUsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AboutUsBtnMouseClicked
        cardLayout.show(MainContainer, "AboutUs");
    }//GEN-LAST:event_AboutUsBtnMouseClicked

    private void ReturnToLoginBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReturnToLoginBtnMouseClicked
        cardLayout.show(MainContainer, "SignIn");
    }//GEN-LAST:event_ReturnToLoginBtnMouseClicked

    private void exitbtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtn1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitbtn1MouseClicked

    private void minimizebtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtn1MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtn1MouseClicked

    private void exitbtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtn2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitbtn2MouseClicked

    private void minimizebtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtn2MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtn2MouseClicked

    private void exitbtn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtn4MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitbtn4MouseClicked

    private void minimizebtn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtn4MouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtn4MouseClicked

    private void AdminCommitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminCommitBtnActionPerformed
        jLabelAddError.setText("");
        try {
//          Open table data file to write the edited data from JTable after save button is clicked
            FileWriter tableWriter = new FileWriter(curDirectoryPath,  false);
            int rows = jTableAdmin.getRowCount();
//          Append each column from table row by row to the csv file
            for (int i = 0; i < rows; i++) {
                tableWriter.append(jTableAdmin.getValueAt(i, 0).toString()+",");
                tableWriter.append(jTableAdmin.getValueAt(i, 1).toString()+",");
                tableWriter.append(jTableAdmin.getValueAt(i, 2).toString()+",");
                tableWriter.append(jTableAdmin.getValueAt(i, 3).toString()+",");
                tableWriter.append(jTableAdmin.getValueAt(i, 4).toString());
                tableWriter.append("\n");
                tableWriter.flush();
            }
            JOptionPane.showMessageDialog(this, "Changes saved permanently", "Save", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AdminCommitBtnActionPerformed

    private void LogInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogInBtnActionPerformed
        login();
    }//GEN-LAST:event_LogInBtnActionPerformed

    private void LogOutUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutUserBtnActionPerformed
        logOut();
    }//GEN-LAST:event_LogOutUserBtnActionPerformed

    private void AdminLogOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminLogOutBtnActionPerformed
        logOut();
    }//GEN-LAST:event_AdminLogOutBtnActionPerformed

    private void AdminClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminClearBtnActionPerformed
        AdminProductIDTxtFld.setText("");
        AdminProductNameTxtFld.setText("");
        AdminPriceTxtFld.setText("");
        UserMinPriceTxtFld.setText("");
        UserMaxPriceTxtFld.setText("");
        SearchTxtFld.setText("");
        jLabelAddError.setText("");
        
    }//GEN-LAST:event_AdminClearBtnActionPerformed

    private void AdminToUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminToUserBtnActionPerformed
        cardLayout.show(MainContainer, "UserPage");
        jLabelAddError.setText("");
    }//GEN-LAST:event_AdminToUserBtnActionPerformed

    private void UserClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserClearBtnActionPerformed
        addToTables(curDirectoryPath);
        UserMinPriceTxtFld.setText("");
        UserMaxPriceTxtFld.setText("");
        SearchTxtFld.setText("");
        SearchResultLabel.setText("");
    }//GEN-LAST:event_UserClearBtnActionPerformed

    private void AdminDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminDeleteBtnActionPerformed
        jLabelAddError.setText("");
        int[] selectedRows = jTableAdmin.getSelectedRows();
        if(selectedRows.length == 0){
            JOptionPane.showMessageDialog(this, "No row selected", "Delete rows", JOptionPane.ERROR_MESSAGE);
        }
        else{
            int deleteAction = JOptionPane.showConfirmDialog(this, "Are you sure to delete the selected row(s)?", "Delete rows", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (deleteAction == JOptionPane.YES_OPTION){
             
                DefaultTableModel adminModel = (DefaultTableModel) jTableAdmin.getModel();
                DefaultTableModel userModel = (DefaultTableModel) jTableUser.getModel();
                
                for(int i=0;i<selectedRows.length;i++){
                    adminModel.removeRow(selectedRows[i]-i);
                    userModel.removeRow(selectedRows[i]-i);
                    JOptionPane.showConfirmDialog(this, "Row(s) deleted","Delete rows", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_AdminDeleteBtnActionPerformed

    private void AdminAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAddBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableAdmin.getModel();
        DefaultTableModel usermodel = (DefaultTableModel) jTableUser.getModel();
        String productID = AdminProductIDTxtFld.getText();
        String productName = AdminProductNameTxtFld.getText();
        String productType = AdminTypeComboBox.getSelectedItem().toString();
        String productBrand = AdminBrandComboBox.getSelectedItem().toString();
        String productPrice = AdminPriceTxtFld.getText();
        String[] items = {productID, productName, productType, productBrand, productPrice};

        int rowCount = jTableAdmin.getRowCount();
        int colCount = jTableAdmin.getColumnCount();

        int emptyRow=0;
        for(int i=0;i<rowCount;i++){
            if(jTableAdmin.getValueAt(i, 0) != null) emptyRow++;
        }
        LinkedList pIds = getProductIds();
        if(!pIds.contains(productID)){
            if(productID.isEmpty() || productName.isEmpty() || productType.isEmpty() || productBrand.isEmpty() || productPrice.isEmpty()){
                jLabelAddError.setText("Please fill all the fields!");
            }
            else{
                if(emptyRow >= rowCount){
                    model.setRowCount(rowCount+1);
                    usermodel.setRowCount(rowCount+1);
                }
                jLabelAddError.setText("");
                JOptionPane.showConfirmDialog(this, "New Product Added","New Entry", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                for (int i = 0; i < colCount; i++) {
                    jTableAdmin.setValueAt(items[i], emptyRow, i);
                    jTableUser.setValueAt(items[i], emptyRow, i);
                }
            }
        }
        else{
            jLabelAddError.setText("Product ID already used!");
        }
    }//GEN-LAST:event_AdminAddBtnActionPerformed

    private void AdminEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminEditBtnActionPerformed
        int[] selectedRows = jTableAdmin.getSelectedRows();
        jLabelAddError.setText("");
        // to check if a single row selection is made
        if(selectedRows.length == 0){
            JOptionPane.showMessageDialog(this, "No row selected", "Edit", JOptionPane.ERROR_MESSAGE);
        }
        else if (selectedRows.length > 1){
            JOptionPane.showMessageDialog(this, "Please select a single row to edit", "Edit", JOptionPane.ERROR_MESSAGE);
        }
        else{
            JTextField pIDTxt = new JTextField();
            JTextField nameTxt = new JTextField();
            JTextField typeTxt = new JTextField();
            JTextField brandTxt = new JTextField();
            JTextField priceTxt = new JTextField();
            final JComponent[] editForm = new JComponent[] {
                new JLabel("Product ID:"),
                pIDTxt,
                new JLabel("Product Name:"),
                nameTxt,
                new JLabel("Type:"),
                typeTxt,
                new JLabel("Brand:"),
                brandTxt,
                new JLabel("Price:"),
                priceTxt
            };
            
            pIDTxt.setText(jTableAdmin.getValueAt(selectedRows[0],0).toString());
            nameTxt.setText(jTableAdmin.getValueAt(selectedRows[0],1).toString());
            typeTxt.setText(jTableAdmin.getValueAt(selectedRows[0],2).toString());
            brandTxt.setText(jTableAdmin.getValueAt(selectedRows[0],3).toString());
            priceTxt.setText(jTableAdmin.getValueAt(selectedRows[0],4).toString());

            int result = JOptionPane.showConfirmDialog(null, editForm, "Edit Product info", JOptionPane.PLAIN_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                String[] values = new String[5];
                values[0] = pIDTxt.getText();
                values[1] = nameTxt.getText();
                values[2] = typeTxt.getText();
                values[3] = brandTxt.getText();
                values[4] = priceTxt.getText();
                for(int i = 0;i<jTableAdmin.getColumnCount();i++){
                    jTableAdmin.setValueAt(values[i], selectedRows[0], i);
                }
                JOptionPane.showMessageDialog(this, "Row edited", "Edit table", JOptionPane.INFORMATION_MESSAGE);
            }else {
                System.out.println("User canceled / closed the dialog, result = " + result);
            }
        }
    }//GEN-LAST:event_AdminEditBtnActionPerformed
             
    private void UserNameRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameRadioBtnActionPerformed
        if(UserNameRadioBtn.isSelected()){
            jLabelBrand.setVisible(false);
            UserBrandComboBox.setEnabled(false);
            UserBrandComboBox.setVisible(false);
            jLabelType.setVisible(false);
            UserTypeComboBox.setEnabled(false);
            UserTypeComboBox.setVisible(false);
            jLabelRange.setVisible(false);
            MaxLabel.setVisible(false);
            MinLabel.setVisible(false);
            UserMinPriceTxtFld.setEnabled(false);
            UserMinPriceTxtFld.setVisible(false);
            UserMaxPriceTxtFld.setEnabled(false);
            UserMaxPriceTxtFld.setVisible(false);
            userSearch = 1;
        }
    }//GEN-LAST:event_UserNameRadioBtnActionPerformed

    private void UserTypeRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserTypeRadioBtnActionPerformed
        if(UserTypeRadioBtn.isSelected()){
            UserTypeComboBox.setEnabled(true);
            UserTypeComboBox.setVisible(true);
            jLabelType.setVisible(true);
            jLabelBrand.setVisible(false);
            UserBrandComboBox.setEnabled(false);
            UserBrandComboBox.setVisible(false);
            jLabelRange.setVisible(false);
            MaxLabel.setVisible(false);
            MinLabel.setVisible(false);
            UserMinPriceTxtFld.setEnabled(false);
            UserMinPriceTxtFld.setVisible(false);
            UserMaxPriceTxtFld.setEnabled(false);
            UserMaxPriceTxtFld.setVisible(false);
            userSearch = 2;
        }
    }//GEN-LAST:event_UserTypeRadioBtnActionPerformed

    private void UserBrandRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserBrandRadioBtnActionPerformed
        if(UserBrandRadioBtn.isSelected()){
            jLabelBrand.setVisible(true);
            UserBrandComboBox.setEnabled(true);
            UserBrandComboBox.setVisible(true);
            jLabelType.setVisible(false);
            UserTypeComboBox.setEnabled(false);
            UserTypeComboBox.setVisible(false);
            jLabelRange.setVisible(false);
            MaxLabel.setVisible(false);
            MinLabel.setVisible(false);
            UserMinPriceTxtFld.setEnabled(false);
            UserMinPriceTxtFld.setVisible(false);
            UserMaxPriceTxtFld.setEnabled(false);
            UserMaxPriceTxtFld.setVisible(false);
            userSearch = 3;
        }
    }//GEN-LAST:event_UserBrandRadioBtnActionPerformed

    private void UserPriceRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserPriceRadioBtnActionPerformed
        if(UserPriceRadioBtn.isSelected()){
            SearchTxtFld.setText("");
            jLabelBrand.setVisible(false);
            UserBrandComboBox.setEnabled(false);
            UserBrandComboBox.setVisible(false);
            jLabelType.setVisible(false);
            UserTypeComboBox.setEnabled(false);
            UserTypeComboBox.setVisible(false);
            jLabelRange.setVisible(true);
            MaxLabel.setVisible(true);
            MinLabel.setVisible(true);
            UserMinPriceTxtFld.setEnabled(true);
            UserMinPriceTxtFld.setVisible(true);
            UserMaxPriceTxtFld.setEnabled(true);
            UserMaxPriceTxtFld.setVisible(true);
            userSearch = 4;
        }
    }//GEN-LAST:event_UserPriceRadioBtnActionPerformed
    
     /*
        Seacrching the inventory database
     */
    private void UserSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserSearchBtnActionPerformed
       if(buttonGroup1.getSelection()!=null){
            addToTables(curDirectoryPath);
            //For max and min price range search
            if(UserPriceRadioBtn.isSelected() && !UserMaxPriceTxtFld.getText().isBlank() && !UserMinPriceTxtFld.getText().isBlank() && SearchTxtFld.getText().isBlank()){
                try{
                    int minval = Integer.parseInt(UserMinPriceTxtFld.getText());
                    int maxval = Integer.parseInt(UserMaxPriceTxtFld.getText());
                    DefaultTableModel dtm = (DefaultTableModel) jTableUser.getModel();
                    int count = 0;
                    for(int i =0; i < dtm.getRowCount();i++){
                        int val = Integer.parseInt(String.valueOf(dtm.getValueAt(i, 4)));
                        if(val >= minval && val <= maxval){
                            dtm.moveRow(i, i, count);
                            count++;
                        }
                    }
                    dtm.setRowCount(count);
                    SearchResultLabel.setText(String.valueOf(count) + " result(s) found");
                    JOptionPane.showMessageDialog(this,String.valueOf(count) + " result(s) found", "Search result", JOptionPane.INFORMATION_MESSAGE);
                    
                }catch(Exception e){
                    e.printStackTrace();
                }
            }else{
                SearchAlgo sc = new SearchAlgo();
                LinkedList array =  new LinkedList();
                int[] indexes = null;
                DefaultTableModel dtm = (DefaultTableModel) jTableUser.getModel();
                LinkedList pIds = getProductIds();
                    try{
                        switch(userSearch){
                            case 4:
                            LinkedList prices = getPrices();
                            for (int i = 0; i < prices.size(); i++) {
                                int j = Integer.parseInt(prices.get(i).toString());
                                array.add(j);
                            }
                            String searchValue = SearchTxtFld.getText();

                            indexes = sc.search("int", array, pIds, searchValue);

                            break;
                            case 3:
                            LinkedList brands = getBrands();
                            for (int i = 0; i < brands.size(); i++) {
                                String j = (brands.get(i).toString());
                                array.add(j);
                            }
                            String searchValuestr = SearchTxtFld.getText();
                            indexes = sc.search("String", array, pIds, searchValuestr);
                            break;

                            case 2:
                            LinkedList types = getTypes();
                            for (int i = 0; i < types.size(); i++) {
                                String j = (types.get(i).toString());
                                array.add(j);
                            }
                            String searchStr = SearchTxtFld.getText();
                            indexes = sc.search("String", array, pIds, searchStr);
                            break;

                            case 1:
                            LinkedList names = getNames();
                            for (int i = 0; i < names.size(); i++) {
                                String j = (names.get(i).toString());
                                array.add(j);
                            }
                            String toSearch = SearchTxtFld.getText();
                            indexes = sc.search("String", array, pIds, toSearch);
                            break;
                        }
                        if(0 == indexes.length){
                            SearchResultLabel.setText("");
                            JOptionPane.showMessageDialog(this, "No results found", "Search result", JOptionPane.INFORMATION_MESSAGE);
                            SearchTxtFld.setText("");

                        }
                        else{
                            int totalCols = jTableUser.getColumnCount();
                            for(int k = 0; k < indexes.length; k++){
                                for(int a = 0; a < totalCols; a++)
                                jTableUser.setValueAt(jTableUser.getValueAt(indexes[k], a), k, a);
                            }
                            dtm.setRowCount(indexes.length);
                            SearchResultLabel.setText(String.valueOf(indexes.length) + " result(s) found");
                            JOptionPane.showMessageDialog(this,String.valueOf(indexes.length) + " result(s) found", "Search result", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }catch(HeadlessException | NumberFormatException ex){
                        SearchResultLabel.setText("");
                        JOptionPane.showMessageDialog(this, "Please choose the correct option", "Error", JOptionPane.ERROR_MESSAGE);

                }
            }
        }else{
            SearchResultLabel.setText("");
            JOptionPane.showMessageDialog(this, "Please choose an option", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_UserSearchBtnActionPerformed

    private void UserTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserTypeComboBoxActionPerformed
        String selectType=UserTypeComboBox.getSelectedItem().toString();
        SearchTxtFld.setText(selectType);
    }//GEN-LAST:event_UserTypeComboBoxActionPerformed

    private void PasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordFieldKeyPressed
        if(evt.getKeyCode() == 10) LogInBtnActionPerformed(null);
    }//GEN-LAST:event_PasswordFieldKeyPressed

    private void AdminAccessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminAccessBtnActionPerformed
        cardLayout.show(MainContainer, "AdminPage");
    }//GEN-LAST:event_AdminAccessBtnActionPerformed

    private void minimizebtn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtn3MouseClicked
         this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtn3MouseClicked

    private void exitbtn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtn3MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitbtn3MouseClicked

    private void HelpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpBtnActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                File help = new File("./src/Database/help.pdf");
                Desktop.getDesktop().open(help); 
                JOptionPane.showConfirmDialog(new MainFrame(), "A pdf file is opened in default app","Help", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                } 
            catch (IOException ex) {}
        }
    }//GEN-LAST:event_HelpBtnActionPerformed

    private void AdminTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminTypeComboBoxActionPerformed

    }//GEN-LAST:event_AdminTypeComboBoxActionPerformed

    private void UserBrandComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserBrandComboBoxActionPerformed
        String selectBrand=UserBrandComboBox.getSelectedItem().toString();
        SearchTxtFld.setText(selectBrand);
    }//GEN-LAST:event_UserBrandComboBoxActionPerformed
    
    private void addToTables(String path){
        String line;
        DefaultTableModel adModel = (DefaultTableModel) jTableAdmin.getModel();
        DefaultTableModel usrModel = (DefaultTableModel) jTableUser.getModel();
        try {
            BufferedReader readCSV = new BufferedReader(new FileReader(path));
            int currentRow = 0;
            while((line = readCSV.readLine()) != null){
                if(currentRow>=jTableAdmin.getRowCount()){
                    adModel.setRowCount(currentRow+1);
                }
                if(currentRow>=jTableUser.getRowCount()){
                    usrModel.setRowCount(currentRow+1);
                }
                String[] tableData = line.split(","); //take the current row and split into array of strings
//              Add data to each rows of JTables
                for (int i = 0; i < tableData.length; i++) {
                    jTableUser.setValueAt(tableData[i], currentRow, i);
                    jTableAdmin.setValueAt(tableData[i], currentRow, i);                                
                }
                currentRow++;
            }
        }catch (FileNotFoundException fex){
            System.out.println("File not found.");
        }
        catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    
    /*
    Adds menu bar to the title bar
    */
    
    private void addMenuBar(JPanel name){
        JMenuBar bar = new JMenuBar();
        JMenu fileMenu = new JMenu("File");
        JMenuItem openMenu = new JMenuItem(new AbstractAction("Open") {
            @Override
            public void actionPerformed(ActionEvent e) {
//              Open jfilechooser 
                JFileChooser chooser = new JFileChooser();
                FileNameExtensionFilter filter = new FileNameExtensionFilter(
                        "*.csv", "csv");
                chooser.setFileFilter(filter);
                int returnVal = chooser.showOpenDialog(null);
                if(returnVal == JFileChooser.APPROVE_OPTION) {
                    curDirectoryPath = chooser.getSelectedFile().getAbsolutePath();
                    addToTables(curDirectoryPath);
                }
            }
        });
        fileMenu.add(openMenu);
        JMenuItem exitMenu = new JMenuItem(new AbstractAction("Exit") {
            @Override
            public void actionPerformed(ActionEvent e) {
//              Exit the app
                System.exit(0);
            }
        });
        fileMenu.add(exitMenu);
        JMenu helpMenu = new JMenu("Help");
        JMenuItem helpAppMenu = new JMenuItem(new AbstractAction("About app"){
            @Override
            public void actionPerformed(ActionEvent e) {
//              Open help.pdf file
                if (Desktop.isDesktopSupported()) {
                    try {
                        File helpFile = new File("./src/Database/help.pdf");
                        Desktop.getDesktop().open(helpFile); 
                        JOptionPane.showConfirmDialog(new MainFrame(), "A pdf file is opened in default app","Help", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    } catch (IOException ex) {}
                }
            }
        });
        JMenu toolsMenu = new JMenu("Tools");
        JMenuItem refreshMenu = new JMenuItem(new AbstractAction("Refresh"){
            @Override
            public void actionPerformed(ActionEvent e) {
//              Update values from storage files to the tables
                addToTables(curDirectoryPath);
            }
        });
        toolsMenu.add(refreshMenu);
        helpMenu.add(helpAppMenu);
        bar.add(fileMenu);
        bar.add(toolsMenu);
        bar.add(helpMenu);
        bar.setBorderPainted(false);
        name.add(bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 115, 20));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
                                      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AboutUs;
    public javax.swing.JButton AboutUsBtn;
    private javax.swing.JButton AdminAccessBtn;
    private javax.swing.JButton AdminAddBtn;
    private javax.swing.JComboBox<String> AdminBrandComboBox;
    private javax.swing.JButton AdminClearBtn;
    private javax.swing.JButton AdminCommitBtn;
    private javax.swing.JButton AdminDeleteBtn;
    private javax.swing.JButton AdminEditBtn;
    private javax.swing.JButton AdminLogOutBtn;
    private javax.swing.JPanel AdminPage;
    private javax.swing.JTextField AdminPriceTxtFld;
    private javax.swing.JTextField AdminProductIDTxtFld;
    private javax.swing.JTextField AdminProductNameTxtFld;
    private javax.swing.JButton AdminToUserBtn;
    private javax.swing.JComboBox<String> AdminTypeComboBox;
    private javax.swing.JLabel AdminWelcomeLabel;
    private javax.swing.JPasswordField ConPasswordField;
    private javax.swing.JLabel ConPasswordLabel;
    private javax.swing.JLabel ConfigureLabel;
    private javax.swing.JPanel ConfigurePanel;
    private javax.swing.JLabel CopyrightAdminlbl;
    private javax.swing.JLabel CopyrightAdminlbl1;
    private javax.swing.JLabel FullNameLabel;
    public javax.swing.JButton HelpBtn;
    private javax.swing.JButton LogInBtn;
    private javax.swing.JButton LogOutUserBtn;
    private javax.swing.JPanel LogoPanel;
    private javax.swing.JPanel MainContainer;
    private javax.swing.JLabel MaxLabel;
    private javax.swing.JLabel MinLabel;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JLabel ProductBrandLabel;
    private javax.swing.JLabel ProductIDLabel;
    private javax.swing.JLabel ProductNameLabel;
    private javax.swing.JLabel ProductPriceLabel;
    private javax.swing.JLabel ProductTypeLabel;
    private javax.swing.JPasswordField RegPasswordField;
    private javax.swing.JLabel RegPasswordLabel;
    private javax.swing.JLabel RegUsernameLabel;
    public javax.swing.JTextField RegUsernameTxtFld;
    private javax.swing.JButton RegisterBtn;
    public javax.swing.JTextField RegisterFullNameTxtFld;
    public javax.swing.JButton RegisterHereBtn;
    public javax.swing.JButton ReturnBtn;
    public javax.swing.JButton ReturnToLoginBtn;
    private javax.swing.JLabel SearchResultLabel;
    private javax.swing.JTextField SearchTxtFld;
    private javax.swing.JPanel SignIn;
    private javax.swing.JLabel SignInLabel;
    private javax.swing.JPanel SignUp;
    private javax.swing.JLabel SignUpLabel;
    private javax.swing.JLabel SrchProLabel;
    private javax.swing.JComboBox<String> UserBrandComboBox;
    private javax.swing.JRadioButton UserBrandRadioBtn;
    private javax.swing.JButton UserClearBtn;
    private javax.swing.JTextField UserMaxPriceTxtFld;
    private javax.swing.JTextField UserMinPriceTxtFld;
    private javax.swing.JRadioButton UserNameRadioBtn;
    private javax.swing.JPanel UserPage;
    private javax.swing.JRadioButton UserPriceRadioBtn;
    private javax.swing.JButton UserSearchBtn;
    private javax.swing.JComboBox<String> UserTypeComboBox;
    private javax.swing.JRadioButton UserTypeRadioBtn;
    private javax.swing.JLabel UserWelcomeLabel;
    private javax.swing.JLabel UsernameLabel;
    public javax.swing.JTextField UsernameTextField;
    private javax.swing.JPanel WelcomePanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel exitbtn;
    private javax.swing.JLabel exitbtn1;
    private javax.swing.JLabel exitbtn2;
    private javax.swing.JLabel exitbtn3;
    private javax.swing.JLabel exitbtn4;
    public javax.swing.JLabel jBackground;
    public javax.swing.JLabel jBackground1;
    public javax.swing.JLabel jBackground3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabelAboutUs;
    private javax.swing.JLabel jLabelAddError;
    private javax.swing.JLabel jLabelBrand;
    private javax.swing.JLabel jLabelCopyright;
    private javax.swing.JLabel jLabelCopyright1;
    private javax.swing.JLabel jLabelPicon;
    private javax.swing.JLabel jLabelPline;
    private javax.swing.JLabel jLabelPline1;
    private javax.swing.JLabel jLabelPline2;
    private javax.swing.JLabel jLabelRange;
    private javax.swing.JLabel jLabelSignInError;
    private javax.swing.JLabel jLabelSignUpError;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JLabel jLabelUicon;
    private javax.swing.JLabel jLabelUline;
    private javax.swing.JLabel jLabelUline1;
    private javax.swing.JLabel jLabelUline2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAdmin;
    private javax.swing.JTable jTableUser;
    private javax.swing.JLabel minimizebtn;
    private javax.swing.JLabel minimizebtn1;
    private javax.swing.JLabel minimizebtn2;
    private javax.swing.JLabel minimizebtn3;
    private javax.swing.JLabel minimizebtn4;
    // End of variables declaration//GEN-END:variables
}
